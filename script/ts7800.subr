# Copyright (c) 20017-2022 Technologic Systems, Inc. dba embeddedTS.
# All rights reserved.

# Note: Be sure you have 64-bit arithmetic compiled into your shell, or some
# of these functions will fail (e.g. for ADDRESS > 0x7FFFFFFF)

# bit_set BIT_WIDTH ADDRESS BIT_NUMBER
bit_set() {
  local MASK VAL
  MASK=$((1<<$3))
  VAL=`syscon-peekpoke $1 $2`
  VAL=$((MASK|VAL))
  syscon-peekpoke $1 $2 $VAL
}

# bit_clr BIT_WIDTH ADDRESS BIT_NUMBER
bit_clr() {
  local MASK VAL
  MASK=$((1<<$3))
  VAL=`syscon-peekpoke $1 $2`
  VAL=$((~MASK&VAL))
  syscon-peekpoke $1 $2 $VAL
}

# bit_get BIT_WIDTH ADDRESS BIT_NUMBER
bit_get() {
  local MASK VAL
  MASK=$((1<<$3))
  VAL=`peekpoke $1 $2`
  VAL=$((VAL>>$3))
  VAL=$((VAL&1))
  echo $VAL
}

led0() {
  if test "$1" = "0"; then
    bit_clr 32 0x08 30 > /dev/null
  else
    bit_set 32 0x08 30 > /dev/null
  fi
}


led1() {
  if test "$1" = "0"; then
    bit_clr 32 0x0c 20 > /dev/null
  else
    bit_set 32 0x0c 20 > /dev/null
  fi
}


pc104on() {
  (
  syscon-peekpoke 32 0x30 0x55555555
  syscon-peekpoke 32 0x34 0x55555555
  syscon-peekpoke 32 0x38 0x55555
  syscon-peekpoke 32 0x3c 0x55555
  ) > /dev/null 2>&1
}

pc104off() {
  (
  syscon-peekpoke 32 0x30 0
  syscon-peekpoke 32 0x34 0
  syscon-peekpoke 32 0x38 0
  syscon-peekpoke 32 0x3c 0
  ) > /dev/null 2>&1
}

tshelp() {
  echo "embeddedTS TS-7800 Linux miniroot commands:"
  echo "===================================================="
  echo
  echo "'exit' - start full Linux boot or exits telnet session"
  echo "'sdmount' - makes available executables on SD card at /mnt/root"
  echo
  echo "Contact support@embeddedTS.com for further questions."
}

sdmount() {
  (
  mount /dev/tssdcarda1 /mnt/root
  ) > /dev/null 2>&1
}

